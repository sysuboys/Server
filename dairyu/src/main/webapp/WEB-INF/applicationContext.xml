<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

	<!-- 扫描注解Bean -->
	<context:component-scan base-package="org.sysuboys.diaryu">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 开启AOP监听 只对当前配置文件有效
	<aop:aspectj-autoproxy expose-proxy="true" /> -->

	<!-- 临时用于数据库数据的初始化 -->
	<bean id="init" class="org.sysuboys.diaryu.application.Init"
		init-method="doInit"></bean>



	<!-- #1 shiro -->

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="org.sysuboys.diaryu.realm.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>

	<!-- RememberMe 摘自 http://jinnianshilongnian.iteye.com/blog/2031823 -->
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="filterChainDefinitions">
			<value>
				/signup = anon
				/login = anon
				/logout = user
				
				/upload = authc
				/getFile = authc
				
				/invite = authc
				/isInvited = authc
				/ready = authc
				/match = authc
				
				/test=authc,roles[vip],perms[user:delete]
			</value>
		</property>
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- shiro缓存，拓展参考http://blog.csdn.net/weixin_35890630/article/details/52760965 -->
	<!-- <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
		</bean> -->



	<!-- #2 persistence -->

	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/test_du?createDatabaseIfNotExist=true&amp;useSSL=false" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- 以下参考http://www.cnblogs.com/share2015/p/5382759.html -->

	<!--jpa管理工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<!--数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!--适配器 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<!--扫描包 -->
		<property name="packagesToScan" value="org.sysuboys.diaryu.business" />

		<!--基本配置 -->
		<property name="jpaProperties">
			<props>
				<!--命名策略 -->
				<!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop> -->
				<!--基本配置 -->
				<!--<prop key="hibernate.format_sql">true</prop> -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!--二级缓存 -->
				<!--<prop key="hibernate.cache.use_query_cache">true</prop> <prop key="hibernate.cache.use_second_level_cache">true</prop> 
					<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory 
					</prop> -->
			</props>
		</property>
		<property name="sharedCacheMode" value="ENABLE_SELECTIVE" />
	</bean>

	<!--配置事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!--配置基于注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--配置spring data -->
	<!--<jpa:repositories base-package="org.sysuboys.diaryu.business.entity" entity-manager-factory-ref="entityManagerFactory"></jpa:repositories> -->



	<!-- #3 ehcache -->
	<cache:annotation-driven cache-manager="cacheManager" />  

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache"></property>
	</bean>

	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache-setting.xml"></property>
	</bean>

</beans>